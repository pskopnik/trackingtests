#ifndef TRACKING_GRAPHS_H_
#define TRACKING_GRAPHS_H_

/**
 * Generates Dot visualisations of a dynamic network generated by the DynamicCommunitiesGenerator.
 * Uses different tracking methods for analysing the timesteps of the same "graph".
 *
 * Output:
 *  - File graph.CheapestMutual.dot
 *      Dot output (including super cluster colouring)
 *      Analysis by CheapestMutual algorithm
 *  - File graph.RecursiveMutual.dot
 *      Dot output (including super cluster colouring)
 *      Analysis by RecursiveMutual algorithm
 *  - File graph.TopDownIndividualOptimumWeakenedZero.dot
 *      Dot output (including super cluster colouring)
 *      Analysis by TopDownIndividualOptimumWeakenedZero algorithm
 *  - File graph.LeafExpansion.dot
 *      Dot output (including super cluster colouring)
 *      Analysis by LeafExpansion algorithm
 *
 * @param k Number of subclusters.
 * @param hhc Half-half coefficient. Passed to the AffinitiesGenerator.
 * @param l The value of l.
 * @param n Number of individuals n.
 * @param timesteps Number of timesteps.
 * @param d_timesteps Timestep delta. Every d_timesteps generator timestep is added to the
 *      aggregator.
 */
void run(unsigned int k, double hhc, unsigned int l, unsigned int n, double alpha_v,
	unsigned int timesteps, unsigned int d_timesteps
);

#endif /* TRACKING_GRAPHS_H_ */
